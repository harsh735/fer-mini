{"ast":null,"code":"var _jsxFileName = \"/home/harsh/Desktop/cs230-fer-master/webapp/src/App.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport './App.css';\nimport { loadModels, detectFaces, drawResults } from \"./Face API/faceApi\";\nimport * as tf from '@tensorflow/tfjs';\nimport loading from './Assets/loading.gif';\nimport Camera from \"./Camera/Camera\";\nimport Switch from \"react-switch\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { createFaLibrary } from \"./icons\";\nloadModels();\ncreateFaLibrary();\n\nfunction App() {\n  const MODEL_PATH = './jsmodel/model.json';\n  const INDEXEDDB_DB = 'tensorflowjs';\n  const INDEXEDDB_STORE = 'model_info_store';\n  const INDEXEDDB_KEY = 'web-model';\n  const photoMode = false;\n  useEffect(() => {\n    loadmodel().then(() => {\n      setisDownloadingModel(false);\n      getResults();\n    });\n  }, []);\n\n  const clearOverlay = canvas => {\n    canvas.current.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  const getResults = () => {\n    if (!photoMode && camera !== null) {\n      const ticking = setInterval(async () => {\n        await getFaces();\n      }, 200);\n      return () => {\n        clearOverlay(cameraCanvas);\n        clearInterval(ticking);\n      };\n    } else {\n      return clearOverlay(cameraCanvas);\n    }\n  };\n\n  const getFaces = async () => {\n    if (camera.current !== null) {\n      const faces = await detectFaces(camera.current.video);\n      var src = camera.current.getScreenshot();\n      var results = await drawResults(camera.current.video, cameraCanvas.current, faces, \"boxLandmarks\", src, facecanvas, model);\n      var expressions = [\"angry\", \"disgusted\", \"afraid\", \"happy\", \"sad\", \"surprised\", \"neutral\"];\n\n      if (results !== undefined) {\n        var max = results.reduce(function (a, b) {\n          return Math.max(a, b);\n        });\n        var index = results.indexOf(max);\n        setoutput(expressions[index]);\n      }\n\n      setResult(faces);\n    }\n  };\n\n  var model = null;\n  var modelLastUpdated = null;\n  const aspectRatio = window.innerWidth / window.innerHeight;\n\n  const getExpression = () => {\n    setexpression(output);\n\n    if (camera) {\n      var src = camera.current.getScreenshot();\n    }\n\n    setvideo(false);\n    setcurrent(src);\n  };\n\n  const reCapture = () => {\n    setvideo(true);\n  };\n\n  const loadmodel = async () => {\n    console.log(window.innerWidth, \"innnnnnnner\");\n\n    if ('indexedDB' in window) {\n      try {\n        model = await tf.loadLayersModel('indexeddb://' + INDEXEDDB_KEY);\n      } catch (e) {\n        console.log(e);\n        model = await tf.loadLayersModel(MODEL_PATH);\n        model.save('indexeddb://' + INDEXEDDB_KEY);\n      }\n    } // If no IndexedDB, then just download like normal.\n    else {\n        console.warn('IndexedDB not supported.');\n        model = await tf.loadLayersModel(MODEL_PATH);\n      }\n\n    setmodelLoaded(true);\n    console.log(\"model loaded\");\n  };\n\n  const camera = useRef();\n  const cameraCanvas = useRef();\n  const facecanvas = useRef();\n  const [result, setResult] = useState([]);\n  const [isDownloadingModel, setisDownloadingModel] = useState(true);\n  const [modelLoaded, setmodelLoaded] = useState(false);\n  const [output, setoutput] = useState(\"\");\n  const [expression, setexpression] = useState(\"\");\n  const [current, setcurrent] = useState(null);\n  const [video, setvideo] = useState(true);\n  const [mode, setMode] = useState(false);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, isDownloadingModel && React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"30vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    style: {\n      color: \"#007c6c\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Downloading Model\")), !isDownloadingModel && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"titleDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginLeft: \"10px\",\n      marginTop: \"1vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    style: {\n      fontSize: \"4vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Facial Emotion Detector\"), React.createElement(\"a\", {\n    className: \"nostyle\",\n    href: \"https://github.com/amilkh/cs230-fer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Deep learning model\"), React.createElement(\"p\", {\n    className: \"nostyle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"\\xA0by\\xA0\"), React.createElement(\"a\", {\n    className: \"nostyle\",\n    href: \"https://cs230.stanford.edu/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Stanford University\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    className: \"nostyle\",\n    href: \"https://github.com/amilkh/cs230-fer/tree/master/webapp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Web app\"), React.createElement(\"p\", {\n    className: \"nostyle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"\\xA0by\\xA0\"), React.createElement(\"a\", {\n    className: \"nostyle\",\n    href: \"https://se.neduet.edu.pk/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"NED University\"), React.createElement(\"div\", {\n    style: {\n      marginLeft: aspectRatio > 1 ? \"92vw\" : \"80vw\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    onChange: () => {\n      setMode(!mode);\n      reCapture();\n    },\n    uncheckedIcon: React.createElement(FontAwesomeIcon, {\n      style: {\n        marginLeft: \"8px\",\n        marginTop: \"5px\"\n      },\n      icon: \"video\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }),\n    checkedIcon: React.createElement(FontAwesomeIcon, {\n      style: {\n        marginLeft: \"10px\",\n        marginTop: \"5px\"\n      },\n      icon: \"camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }),\n    checked: !mode,\n    className: \"App__switcher-switch\",\n    offColor: \"#b3f5e5\",\n    onColor: \"#b3f5e5\",\n    width: 60,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"camera\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"cam_input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: video ? \"block\" : \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Camera, {\n    camera: camera,\n    cameraCanvas: cameraCanvas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), !video && React.createElement(\"img\", {\n    className: \"camera\",\n    src: current,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  })), !mode && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, video && React.createElement(\"button\", {\n    style: {\n      width: aspectRatio > 1 ? window.innerWidth / 100 * 80 : \"33vh\"\n    },\n    className: \"detect\",\n    onClick: () => getExpression(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Detect My Emotion\"), !video && React.createElement(\"button\", {\n    style: {\n      width: aspectRatio > 1 ? window.innerWidth / 100 * 80 : \"33vh\"\n    },\n    className: \"detect\",\n    onClick: () => reCapture(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Capture Again\"))), React.createElement(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, mode && output !== \"\" && React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"I think you look \", output, \".\"), !mode && expression !== \"\" && React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"I think you look \", expression, \".\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/harsh/Desktop/cs230-fer-master/webapp/src/App.js"],"names":["React","useRef","useState","useEffect","loadModels","detectFaces","drawResults","tf","loading","Camera","Switch","FontAwesomeIcon","createFaLibrary","App","MODEL_PATH","INDEXEDDB_DB","INDEXEDDB_STORE","INDEXEDDB_KEY","photoMode","loadmodel","then","setisDownloadingModel","getResults","clearOverlay","canvas","current","getContext","clearRect","width","height","camera","ticking","setInterval","getFaces","cameraCanvas","clearInterval","faces","video","src","getScreenshot","results","facecanvas","model","expressions","undefined","max","reduce","a","b","Math","index","indexOf","setoutput","setResult","modelLastUpdated","aspectRatio","window","innerWidth","innerHeight","getExpression","setexpression","output","setvideo","setcurrent","reCapture","console","log","loadLayersModel","e","save","warn","setmodelLoaded","result","isDownloadingModel","modelLoaded","expression","mode","setMode","textAlign","marginTop","color","marginLeft","fontSize","display"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport './App.css';\nimport { loadModels, detectFaces, drawResults } from \"./Face API/faceApi\";\nimport * as tf from '@tensorflow/tfjs';\nimport loading from './Assets/loading.gif'\nimport Camera from \"./Camera/Camera\"\nimport Switch from \"react-switch\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { createFaLibrary } from \"./icons\";\n\n\n\n\n\n\nloadModels();\ncreateFaLibrary();\nfunction App() {\n\n  const MODEL_PATH = './jsmodel/model.json';\n\n  const INDEXEDDB_DB = 'tensorflowjs';\n  const INDEXEDDB_STORE = 'model_info_store';\n  const INDEXEDDB_KEY = 'web-model';\n\n  const photoMode = false\n  useEffect(() => {\n    loadmodel().then(() => {\n      setisDownloadingModel(false)\n      getResults()\n    })\n  }, []);\n\n\n\n\n  const clearOverlay = canvas => {\n    canvas.current\n      .getContext(\"2d\")\n      .clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n\n  const getResults = () => {\n    if (!photoMode && camera !== null) {\n      const ticking = setInterval(async () => {\n        await getFaces();\n      }, 200);\n      return () => {\n        clearOverlay(cameraCanvas);\n        clearInterval(ticking);\n      };\n    } else {\n      return clearOverlay(cameraCanvas);\n    }\n  }\n\n\n  const getFaces = async () => {\n    if (camera.current !== null) {\n      const faces = await detectFaces(camera.current.video);\n      var src = camera.current.getScreenshot();\n      var results = await drawResults(\n        camera.current.video,\n        cameraCanvas.current,\n        faces,\n        \"boxLandmarks\",\n        src,\n        facecanvas,\n        model\n      )\n\n      var expressions = [\"angry\", \"disgusted\", \"afraid\", \"happy\", \"sad\", \"surprised\", \"neutral\"]\n\n      if (results !== undefined) {\n        var max = results.reduce(function (a, b) {\n          return Math.max(a, b);\n        });\n        var index = results.indexOf(max)\n        setoutput(expressions[index])\n\n      }\n      setResult(faces);\n\n    }\n  };\n  var model = null\n  var modelLastUpdated = null;\n  const aspectRatio = window.innerWidth / window.innerHeight\n\n  const getExpression = () => {\n    setexpression(output)\n    if (camera) {\n      var src = camera.current.getScreenshot();\n    }\n    setvideo(false)\n    setcurrent(src)\n\n\n  }\n\n  const reCapture = () => {\n    setvideo(true)\n  }\n\n\n\n  const loadmodel = async () => {\n    console.log(window.innerWidth, \"innnnnnnner\")\n    if ('indexedDB' in window) {\n      try {\n        model = await tf.loadLayersModel('indexeddb://' + INDEXEDDB_KEY);\n\n      }\n      catch (e) {\n        console.log(e)\n        model = await tf.loadLayersModel(MODEL_PATH);\n        model.save('indexeddb://' + INDEXEDDB_KEY)\n\n      }\n    }\n    // If no IndexedDB, then just download like normal.\n    else {\n      console.warn('IndexedDB not supported.');\n      model = await tf.loadLayersModel(MODEL_PATH);\n    }\n    setmodelLoaded(true)\n    console.log(\"model loaded\")\n  }\n\n\n\n  const camera = useRef();\n  const cameraCanvas = useRef();\n  const facecanvas = useRef()\n  const [result, setResult] = useState([]);\n  const [isDownloadingModel, setisDownloadingModel] = useState(true)\n  const [modelLoaded, setmodelLoaded] = useState(false)\n  const [output, setoutput] = useState(\"\")\n  const [expression, setexpression] = useState(\"\")\n  const [current, setcurrent] = useState(null)\n  const [video, setvideo] = useState(true)\n  const [mode, setMode] = useState(false)\n\n\n  return (\n\n\n    <div>\n      {isDownloadingModel && <div style={{ textAlign: \"center\", marginTop: \"30vh\" }}>\n        <img src={loading} />\n        <h2 style={{ color: \"#007c6c\" }}>Downloading Model</h2>\n\n      </div>}\n\n      {!isDownloadingModel && <div>\n\n        <div className=\"titleDiv\">\n\n          <div style={{ marginLeft: \"10px\", marginTop: \"1vh\" }}>\n            <h4 style={{ fontSize: \"4vh\" }}>Facial Emotion Detector</h4>\n\n\n\n            <a className=\"nostyle\" href={\"https://github.com/amilkh/cs230-fer\"}>Deep learning model</a>\n            <p className=\"nostyle\">&nbsp;by&nbsp;</p>\n            <a className=\"nostyle\" href={\"https://cs230.stanford.edu/\"}>Stanford University</a>\n            <br />\n\n\n\n            <a className=\"nostyle\" href={\"https://github.com/amilkh/cs230-fer/tree/master/webapp\"}>Web app</a>\n            <p className=\"nostyle\">&nbsp;by&nbsp;</p>\n            <a className=\"nostyle\" href={\"https://se.neduet.edu.pk/\"}>NED University</a>\n\n\n\n            <div style={{ marginLeft: aspectRatio > 1 ? \"92vw\" : \"80vw\" }}>\n              <Switch\n                onChange={() => { setMode(!mode); reCapture() }}\n                uncheckedIcon={<FontAwesomeIcon style={{ marginLeft: \"8px\", marginTop: \"5px\" }} icon=\"video\" />}\n                checkedIcon={<FontAwesomeIcon style={{ marginLeft: \"10px\", marginTop: \"5px\" }} icon=\"camera\" />}\n                checked={!mode}\n                className=\"App__switcher-switch\"\n                offColor={\"#b3f5e5\"}\n                onColor={\"#b3f5e5\"}\n                width={60}\n              />\n            </div>\n\n          </div>\n\n\n\n\n\n\n\n        </div>\n\n\n\n        <div className=\"camera\" align=\"center\">\n          <div id=\"cam_input\">\n            <div style={{ display: video ? \"block\" : \"none\" }}>\n              <Camera camera={camera} cameraCanvas={cameraCanvas} />\n            </div>\n            {!video && <img className=\"camera\" src={current} />}\n          </div>\n          {!mode && <div>\n            {video && <button style={{ width: aspectRatio > 1 ? (window.innerWidth / 100) * 80 : \"33vh\" }} className=\"detect\" onClick={() => getExpression()}>Detect My Emotion</button>}\n            {!video && <button style={{ width: aspectRatio > 1 ? (window.innerWidth / 100) * 80 : \"33vh\" }} className=\"detect\" onClick={() => reCapture()}>Capture Again</button>}\n          </div>}\n        </div>\n\n\n\n\n        <div className=\"footer\">\n          {mode && output !== \"\" && <h3>I think you look {output}.</h3>}\n          {!mode && expression !== \"\" && <h3>I think you look {expression}.</h3>}\n\n        </div>\n\n\n      </div>}\n    </div>\n\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}